//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public RMC.Common.Entitas.Components.Transform.Rotation rotation { get { return (RMC.Common.Entitas.Components.Transform.Rotation)GetComponent(ComponentIds.Rotation); } }

        public bool hasRotation { get { return HasComponent(ComponentIds.Rotation); } }

        public Entity AddRotation(RMC.Common.UnityEngineReplacement.Vector3 newRotation, bool newUseTween) {
            var component = CreateComponent<RMC.Common.Entitas.Components.Transform.Rotation>(ComponentIds.Rotation);
            component.rotation = newRotation;
            component.useTween = newUseTween;
            return AddComponent(ComponentIds.Rotation, component);
        }

        public Entity ReplaceRotation(RMC.Common.UnityEngineReplacement.Vector3 newRotation, bool newUseTween) {
            var component = CreateComponent<RMC.Common.Entitas.Components.Transform.Rotation>(ComponentIds.Rotation);
            component.rotation = newRotation;
            component.useTween = newUseTween;
            ReplaceComponent(ComponentIds.Rotation, component);
            return this;
        }

        public Entity RemoveRotation() {
            return RemoveComponent(ComponentIds.Rotation);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherRotation;

        public static IMatcher Rotation {
            get {
                if (_matcherRotation == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Rotation);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherRotation = matcher;
                }

                return _matcherRotation;
            }
        }
    }
}
